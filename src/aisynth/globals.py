from torch import rand
from aisynth.utils import read_yaml
from torch.utils.tensorboard import SummaryWriter

writer = SummaryWriter('logs')

TEST_INPUTS = {
    "AUDIO_DIR_TEST": [{"audio_dir": r"test_resources/dx7", "duration": 1.0}],
    "CONVBLOCK_TEST": [
        {
            "n_in": 10,
            "n_hidden": 10,
            "batchnorm_flag": False,
            "dropout_flag": False,
            "test_tensor": rand(10, 10),
        },
        {
            "n_in": 10,
            "n_hidden": 10,
            "batchnorm_flag": True,
            "dropout_flag": True,
            "test_tensor": rand(10, 10),
        },
    ],
    "RESBLOCK_TEST": [
        {
            "n_in": 10,
            "n_depth": 2,
            "dilation_growth_rate": 2,
            "dilation_cycle": None,
            "reverse_dilation": False,
            "m_conv": 1,
            "test_tensor": rand(10, 10),
        },
        {
            "n_in": 10,
            "n_depth": 6,
            "dilation_growth_rate": 4,
            "dilation_cycle": None,
            "reverse_dilation": True,
            "m_conv": 2,
            "test_tensor": rand(10, 10),
        },
    ],
    "ENCODERBLOCK_TEST": [
        {
            "input_emb_width": 10,
            "output_emb_width": 5,
            "down_t": 2,
            "stride_t": 2,
            "width": 10,
            "depth": 3,
            "m_conv": 1,
            "dilation_growth_rate": 3,
            "dilation_cycle": None,
            "zero_out": False,
            "res_scale": False,
            "dropout": 0.0,
            "test_tensor": rand(10, 10),
        },
        {
            "input_emb_width": 1000000,
            "output_emb_width": 10,
            "down_t": 3,
            "stride_t": 2,
            "width": 10,
            "depth": 20,
            "m_conv": 2,
            "dilation_growth_rate": 5,
            "dilation_cycle": 1,
            "zero_out": True,
            "res_scale": False,
            "dropout": 0.3,
            "test_tensor": rand(1000000, 10),
        },
    ],
    "DECODERBLOCK_TEST": [
        {
            "input_emb_width": 500,
            "output_emb_width": 5,
            "down_t": 2,
            "stride_t": 2,
            "width": 10,
            "depth": 3,
            "m_conv": 1,
            "dilation_growth_rate": 3,
            "dilation_cycle": None,
            "zero_out": False,
            "res_scale": False,
            "dropout": 0.0,
            "reverse_dilation": True,
            "test_tensor": rand(5, 10),
        },
        {
            "input_emb_width": 10000,
            "output_emb_width": 10,
            "down_t": 3,
            "stride_t": 2,
            "width": 100,
            "depth": 2,
            "m_conv": 2,
            "dilation_growth_rate": 5,
            "dilation_cycle": 1,
            "zero_out": True,
            "res_scale": False,
            "dropout": 0.3,
            "reverse_dilation": True,
            "test_tensor": rand(10, 10),
        },
    ],
    "ENCDEC_TEST": [
        {
            "input_emb_width": 1,
            "output_emb_width": 5,
            "down_t": 3,
            "stride_t": 2,
            "width": 8,
            "depth": 3,
            "m_conv": 1,
            "dilation_growth_rate": 3,
            "dilation_cycle": None,
            "zero_out": False,
            "res_scale": False,
            "batchnorm_flag": True,
            "dropout": 0.0,
            "reverse_dilation": True,
            "test_tensor": rand(1, 1000),
        },
        {
            "input_emb_width": 1,
            "output_emb_width": 10,
            "down_t": 4,
            "stride_t": 1,
            "width": 100,
            "depth": 2,
            "m_conv": 2,
            "dilation_growth_rate": 5,
            "dilation_cycle": 1,
            "zero_out": False,
            "batchnorm_flag": True,
            "res_scale": False,
            "dropout": 0.3,
            "reverse_dilation": True,
            "test_tensor": rand(1, 1000),
        },
    ],
    "TRAIN_TEST": [
        {
            "audio_dir": "test_resources/dx7",
            "input_emb_width": 1,
            "output_emb_width": 64,
            "down_t": 2,  # TODO: when down_t > 2 get incorrect output shapes
            "stride_t": 2,  # TODO: when stride_t > 2 get incorrect output shapes
            "width": 32,
            "depth": 4,
            "m_conv": 1,
            "dilation_growth_rate": 3,
            "dilation_cycle": None,
            "zero_out": False,
            "res_scale": False,
            "batchnorm_flag": True,
            "dropout": 0.0,
            "reverse_dilation": True,
            "n_epochs": 2,
        },
        {
            "audio_dir": "test_resources/dx7",
            "input_emb_width": 1,
            "output_emb_width": 32,
            "down_t": 2,
            "stride_t": 1,
            "width": 10,
            "depth": 2,
            "m_conv": 2,
            "dilation_growth_rate": 5,
            "dilation_cycle": 1,
            "zero_out": False,
            "batchnorm_flag": True,
            "res_scale": False,
            "dropout": 0.3,
            "reverse_dilation": True,
            "n_epochs": 2,
        },
    ],
}

# -----------------------------------------------------------------------------------------------------------------
#                                       VQ-VAE full test arguments/parameters
# -----------------------------------------------------------------------------------------------------------------

VQVAE_CONFIG = read_yaml("src/aisynth/config.yaml")
